package src.views;

import src.Database.Models.Address;
import src.Database.Models.Company;
import src.Database.Models.User;
import src.KeyboardInputs.KeyListenerFactory;
import src.user.SignUp;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Date;

import static src.KeyboardInputs.KeyboardInputs.checkIfZipCode;

/**
 * This is the ContactInformation class, which is a page for entering contact information.
 * It contains fields for entering an address, a drop-down menu for selecting a state, and a field for entering a country.
 * The class also has a button to go back to the previous page, a button to move to the next step, and a progress bar
 * to show the user's progress.
 * Additionally, the class has methods to setup the page for different types of contact information (permanent, current, or company)
 * and to validate the entered zip code.
 */
public class ContactInformation extends PageBack {
    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(16, 5, new Insets(0, 0, 0, 0), -1, -1));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        rootPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        nextButton = new JButton();
        nextButton.setText("Next");
        rootPanel.add(nextButton, new com.intellij.uiDesigner.core.GridConstraints(14, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        rootPanel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(15, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JToolBar.Separator toolBar$Separator1 = new JToolBar.Separator();
        rootPanel.add(toolBar$Separator1, new com.intellij.uiDesigner.core.GridConstraints(12, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        address1TextField = new JFormattedTextField();
        address1TextField.setText("");
        rootPanel.add(address1TextField, new com.intellij.uiDesigner.core.GridConstraints(5, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        address2TextField = new JFormattedTextField();
        rootPanel.add(address2TextField, new com.intellij.uiDesigner.core.GridConstraints(6, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cityTextField = new JFormattedTextField();
        rootPanel.add(cityTextField, new com.intellij.uiDesigner.core.GridConstraints(7, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        stateComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Alabama");
        defaultComboBoxModel1.addElement("Alaska");
        defaultComboBoxModel1.addElement("Arizona");
        defaultComboBoxModel1.addElement("Arkansas");
        defaultComboBoxModel1.addElement("California");
        defaultComboBoxModel1.addElement("Colorado");
        defaultComboBoxModel1.addElement("Connecticut");
        defaultComboBoxModel1.addElement("Delaware");
        defaultComboBoxModel1.addElement("Florida");
        defaultComboBoxModel1.addElement("Georgia");
        defaultComboBoxModel1.addElement("Hawaii");
        defaultComboBoxModel1.addElement("Idaho");
        defaultComboBoxModel1.addElement("Illinois Indiana");
        defaultComboBoxModel1.addElement("Iowa");
        defaultComboBoxModel1.addElement("Kansas");
        defaultComboBoxModel1.addElement("Kentucky");
        defaultComboBoxModel1.addElement("Louisiana");
        defaultComboBoxModel1.addElement("Maine");
        defaultComboBoxModel1.addElement("Maryland");
        defaultComboBoxModel1.addElement("Massachusetts");
        defaultComboBoxModel1.addElement("Michigan");
        defaultComboBoxModel1.addElement("Minnesota");
        defaultComboBoxModel1.addElement("Mississippi");
        defaultComboBoxModel1.addElement("Missouri");
        defaultComboBoxModel1.addElement("Montana Nebraska");
        defaultComboBoxModel1.addElement("Nevada");
        defaultComboBoxModel1.addElement("New Hampshire");
        defaultComboBoxModel1.addElement("New Jersey");
        defaultComboBoxModel1.addElement("New Mexico");
        defaultComboBoxModel1.addElement("New York");
        defaultComboBoxModel1.addElement("North Carolina");
        defaultComboBoxModel1.addElement("North Dakota");
        defaultComboBoxModel1.addElement("Ohio");
        defaultComboBoxModel1.addElement("Oklahoma");
        defaultComboBoxModel1.addElement("Oregon");
        defaultComboBoxModel1.addElement("Pennsylvania Rhode Island");
        defaultComboBoxModel1.addElement("South Carolina");
        defaultComboBoxModel1.addElement("South Dakota");
        defaultComboBoxModel1.addElement("Tennessee");
        defaultComboBoxModel1.addElement("Texas");
        defaultComboBoxModel1.addElement("Utah");
        defaultComboBoxModel1.addElement("Vermont");
        defaultComboBoxModel1.addElement("Virginia");
        defaultComboBoxModel1.addElement("Washington");
        defaultComboBoxModel1.addElement("West Virginia");
        defaultComboBoxModel1.addElement("Wisconsin");
        defaultComboBoxModel1.addElement("Wyoming");
        stateComboBox.setModel(defaultComboBoxModel1);
        rootPanel.add(stateComboBox, new com.intellij.uiDesigner.core.GridConstraints(8, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        zipTextField = new JFormattedTextField();
        rootPanel.add(zipTextField, new com.intellij.uiDesigner.core.GridConstraints(9, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Address 1");
        rootPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Address 2");
        rootPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("City");
        rootPanel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("State");
        rootPanel.add(label4, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("ZIP code");
        rootPanel.add(label5, new com.intellij.uiDesigner.core.GridConstraints(9, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        progressBar1 = new JProgressBar();
        rootPanel.add(progressBar1, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        backButton = new JButton();
        backButton.setText("Back");
        rootPanel.add(backButton, new com.intellij.uiDesigner.core.GridConstraints(14, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        zipErrorLabel = new JLabel();
        zipErrorLabel.setForeground(new Color(-65536));
        zipErrorLabel.setText("");
        rootPanel.add(zipErrorLabel, new com.intellij.uiDesigner.core.GridConstraints(10, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JToolBar.Separator toolBar$Separator2 = new JToolBar.Separator();
        rootPanel.add(toolBar$Separator2, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setText("Country");
        rootPanel.add(label6, new com.intellij.uiDesigner.core.GridConstraints(11, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        countryTextField = new JFormattedTextField();
        rootPanel.add(countryTextField, new com.intellij.uiDesigner.core.GridConstraints(11, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        typeLabel = new JLabel();
        typeLabel.setText("<Type of Contact Information>");
        rootPanel.add(typeLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        companyNameLabel = new JLabel();
        companyNameLabel.setText("Company Name");
        rootPanel.add(companyNameLabel, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        companyNameTextField = new JFormattedTextField();
        companyNameTextField.setText("");
        rootPanel.add(companyNameTextField, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        rootPanel.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(0, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        rootPanel.add(spacer4, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer5 = new com.intellij.uiDesigner.core.Spacer();
        rootPanel.add(spacer5, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        errorLabel = new JLabel();
        errorLabel.setForeground(new Color(-65536));
        errorLabel.setText("");
        rootPanel.add(errorLabel, new com.intellij.uiDesigner.core.GridConstraints(13, 2, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    public enum AddressType {PERMANENT, CURRENT, COMPANY}

    ;
    private static final String FRAME_TITLE = "Contact Information";
    private JPanel rootPanel;
    private JPanel previousPanel;
    private JButton nextButton;
    private JFormattedTextField address1TextField;
    private JFormattedTextField address2TextField;
    private JFormattedTextField cityTextField;
    private JComboBox stateComboBox;
    private JFormattedTextField zipTextField;
    private JProgressBar progressBar1;
    private JButton backButton;
    private JLabel zipErrorLabel;
    private JLabel typeLabel;
    private JFormattedTextField countryTextField;
    private JFormattedTextField companyNameTextField;
    private JLabel companyNameLabel;
    private JLabel errorLabel;
    private User user;
    private Address address;
    private AddressType type;

    public ContactInformation() {
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                headBack();
            }
        });
        nextButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                address.setAddress1(address1TextField.getText());
                address.setAddress2(address2TextField.getText());
                address.setCity(cityTextField.getText());
                // address.setState(stateComboBox.getItemAt(stateComboBox.getSelectedIndex()));
                address.setCountry(countryTextField.getText());

                if (checkIfZipCode(zipTextField.getText())) {
                    zipErrorLabel.setText("");
                    address.setZipCode(zipTextField.getText());
                } else {
                    zipErrorLabel.setText("* Please enter a valid ZIP code.");
                    return;
                }

                // Go to the next step.
                ContactInformation info = new ContactInformation();
                switch (type) {
                    case PERMANENT:
                        // Move to current address panel
                        user.setPermanentAddress(address);
                        info.setup(user, AddressType.CURRENT);
                        info.setPreviousPanel(rootPanel);
                        MainView.setContentPanel(info.getPanel());
                        return;
                    case CURRENT:
                        // Move to company information
                        user.setCurrentAddress(address);
                        if (!user.getCompany()) {
                            break;
                        }
                        info.setup(user, AddressType.COMPANY);
                        info.setPreviousPanel(rootPanel);
                        MainView.setContentPanel(info.getPanel());
                        return;
                    case COMPANY:
                        Company company = new Company();
                        company.setCompanyName(companyNameTextField.getText());
                        company.setCompanyAddress(address.toString());
                        user.setCompanyDetails(company);
                        break;
                }

                (new SignUp()).signUp(user);
                MainView.removeAllPanel();
                MainView.setContentPanel((new UserLogin()).getRootPanel());
            }
        });
        zipTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (checkIfZipCode(zipTextField.getText() + e.getKeyChar())) {
                    zipErrorLabel.setText("");
                } else {
                    zipErrorLabel.setText("* Please enter a valid ZIP code.");
                }
            }
        });
    }

    public JPanel getPanel() {
        return rootPanel;
    }

    public static String getTitle() {
        return FRAME_TITLE;
    }

    public void setup(User user, AddressType type) {
        this.user = user;
        this.setType(type);
    }

    private void setType(AddressType type) {
        this.type = type;
        switch (type) {
            case PERMANENT:
                typeLabel.setText("Permanent Contact Information");
                companyNameLabel.setVisible(false);
                companyNameTextField.setVisible(false);
                address = user.getPermanentAddress();
                break;
            case CURRENT:
                typeLabel.setText("Current Contact Information");
                companyNameLabel.setVisible(false);
                companyNameTextField.setVisible(false);
                address = user.getPermanentAddress();
                if (!user.getCompany()) {
                    nextButton.setText("Submit");
                }
                break;
            case COMPANY:
                typeLabel.setText("Company Information");
                // address = user.getCompanyDetails().getCompanyAddress();
                nextButton.setText("Submit");
        }

        if (address == null) {
            address = new Address();
            return;
        }
        address1TextField.setValue(address.getAddress1());
        address2TextField.setValue(address.getAddress2());
        cityTextField.setValue(address.getCity());
        // stateComboBox.setSelectedItem(address.);
        countryTextField.setValue(address.getCountry());
        zipTextField.setValue(address.getZipCode());
    }

    // DEBUG
    public static void main(String[] args) {
        MainView mainView = new MainView(); // For window dimension setup.
        ContactInformation info = new ContactInformation();

        User user = new User();
        user.setFirstName("Tesla");
        user.setLastName("Auditore");
        user.setCompany(false);
        user.setDateOfBirth(Date.valueOf("1999-04-04"));
        user.setManager(false);
        user.setPassword("123456");
        user.setUserName("testUser");
        user.setEmail("tesla@123.com");
        user.setContactNumber("8574234420");
        user.setSocialSecurity("123456789");

        info.setup(user, AddressType.PERMANENT);

        MainView.setContentPanel(info.getPanel());
    }
}
